import 'package:flutter/material.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.whiteA700.withOpacity(0.16),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(21),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.red300,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: Color(0XFFE6332A),
          fontSize: 17,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: Color(0XFF7B78AA),
          fontSize: 13,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 11,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 36,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.blueGray90001,
          fontSize: 32,
          fontFamily: 'SF Pro Display',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 24,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: Color(0XFF7B78AA),
          fontSize: 13,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.black900.withOpacity(0.87),
          fontSize: 20,
          fontFamily: 'Roboto',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 16,
          fontFamily: 'Merriweather',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: Color(0XDD000000),
          fontSize: 15,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF156FEE),
    secondaryContainer: Color(0XFF667084),

    // On colors(text colors)
    onPrimary: Color(0XFF181D20),
    onPrimaryContainer: Color(0XFF34C759),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber400 => Color(0XFFF0C41B);
  Color get amberA400 => Color(0XFFFFCC00);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue400 => Color(0XFF5790DF);
  Color get blue50 => Color(0XFFE6EEFA);
  Color get blue900 => Color(0XFF093D89);
  Color get blue90019 => Color(0X190240C0);

  // BlueGray
  Color get blueGray10075 => Color(0X75D7D7D7);
  Color get blueGray500 => Color(0XFF6C7A9C);
  Color get blueGray900 => Color(0XFF303030);
  Color get blueGray90001 => Color(0XFF24292E);

  // BlueGrayb
  Color get blueGray9002b => Color(0X2B0A294E);

  // BlueGrayc
  Color get blueGray9004c => Color(0X4C373737);

  // Gray
  Color get gray200 => Color(0XFFE9E9EB);
  Color get gray400 => Color(0XFFC5C3C3);
  Color get gray50 => Color(0XFFF9F9F9);
  Color get gray700 => Color(0XFF606060);
  Color get gray70001 => Color(0XFF586069);
  Color get gray70002 => Color(0XFF616368);
  Color get gray800 => Color(0XFF474747);
  Color get gray900 => Color(0XFF232323);
  Color get gray90001 => Color(0XFF212121);

  // Grayf
  Color get gray5003f => Color(0X3F9A9A9A);
  Color get gray507f => Color(0X7FFAFAFA);

  // Green
  Color get greenA700 => Color(0XFF11AD33);

  // Indigo
  Color get indigo50 => Color(0XFFE4E6EB);
  Color get indigoA700 => Color(0XFF304FFE);

  // LightBlue
  Color get lightBlue400 => Color(0XFF17BAED);

  // Pink
  Color get pink900 => Color(0XFF9A2042);
  Color get pink90001 => Color(0XFF722F37);

  // Red
  Color get red300 => Color(0XFFCB7169);
  Color get red500 => Color(0XFFFF3B30);
  Color get red600 => Color(0XFFE6332A);
  Color get red900 => Color(0XFFBF180E);

  // Teal
  Color get teal5000 => Color(0X00DEE5ED);
  Color get teal900 => Color(0XFF006241);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
